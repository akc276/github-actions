name: Test and deploy react app
on: 
  pull_request:
    types:
      - opened
      - reopened
      - edited
  push:
    branches:
      - main
  workflow_dispatch:
env:
  MONGODB_CLUSTER_ADDRESS: ${{ secrets.MONGODB_CLUSTER_ADDRESS }}
  MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
jobs:
  lint-react-app:
    environment: testing
    runs-on: self-hosted
    steps:
      - name: Read environment variables 
        run: |
          echo "MONGODB_CLUSTER_ADDRESS: ${{ env.MONGODB_CLUSTER_ADDRESS }}"
      - name: Get code
        uses: actions/checkout@v5
      - name: check the files inside repository
        run: find . | sort
      - name: setup node environment
        uses: ./.github/actions/node-env-setup
      - name: Lint react app
        continue-on-error: true
        run: npm run lint
      
  test-react-app:
    # needs: lint-react-app
    runs-on: self-hosted
    steps:
      - name: Get code
        uses: actions/checkout@v5
      # - name: Install NodeJS
      #   uses: actions/setup-node@v5
      #   with: 
      #     node-version: 18
      - name: Cache despendencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: deps-node-modules-${{ hashfiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run tests
        id: run-tests
        run: npm test
      - name: Update Test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
        
  build-react-app:
    # needs: [test-react-app, lint-react-app]
    uses: ./.github/workflows/build-reusable-workflow.yml
            
  deploy-react-app:
    needs: [build-react-app, lint-react-app, test-react-app]
    uses: akc276/github-actions/.github/workflows/deploy-reusable-workflow.yml@main
    with:
      script-file: ${{ needs.build-react-app.outputs.script-file}}
    permissions:
      id-token: write
      contents: read

  report-failure:
    needs: [lint-react-app, test-react-app, build-react-app, deploy-react-app]
    if: failure()
    runs-on: self-hosted
    steps:
      - name: Output failure information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
